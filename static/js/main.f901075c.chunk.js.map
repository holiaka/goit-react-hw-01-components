{"version":3,"sources":["components/CssBaseUnits/CssUnits.js","components/Profil/Profil.styled.js","components/Profil/Profil.jsx","components/Statistic/Statistic.styled.js","components/Statistic/Statistic.jsx","components/Statistic/RandomColorGenerator.js","components/FriendList/FriendList.styled.js","components/FriendListItem/FriendListItem.styled.js","components/FriendListItem/FriendListItem.jsx","components/FriendList/FriendList.jsx","components/App.jsx","index.js"],"names":["cssUnits","borderRadius","fullCircle","sizeText","sm","md","preLg","lg","color","white","lightGray","gray","darkGray","Object","freeze","ProfilCard","styled","div","UserInformation","UserPhoto","img","UserName","p","UserTag","UserLocation","SocialData","SocialStatName","span","SocialStatValue","Profil","user","username","tag","location","avatar","stats","followers","views","likes","src","alt","Intl","NumberFormat","format","StatisticBashboard","section","SectionTitle","h2","StatInformation","ul","StatParameters","li","StatLabel","StatPercentage","Statistic","title","data","map","item","style","backgroundColor","Math","floor","random","label","percentage","id","List","CardWrapper","FriendStatus","FriendAvatar","FriendName","FriendListItem","friend","name","isOnline","width","FriendList","friends","App","display","flexDirection","justifyContent","alignItems","fontSize","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.f901075c.chunk.js","sourcesContent":["export const cssUnits = {\n    borderRadius: '10px',\n    fullCircle: '50%',\n    sizeText: {\n        sm: \"12px\",\n        md: \"16px\",\n        preLg: \"20px\",\n        lg: \"24px\",\n    },\n    color: {\n        white: \"#ffffff\",\n        lightGray: \"#efefef\",\n        gray: \"#dddddd\",\n        darkGray: \"#8b8989\"\n    },\n};\n\nObject.freeze(cssUnits);","import styled from 'styled-components';\nimport { cssUnits } from '../CssBaseUnits/CssUnits';\n\nexport const ProfilCard = styled.div`\n  width: 380px;\n  border-radius: ${cssUnits.borderRadius};\n  font-size: ${cssUnits.sizeText.sm};\n  box-shadow: 0px 0px 5px 0px rgba(170, 170, 170, 1);\n  margin-bottom: 30px;\n`;\n\nexport const UserInformation = styled.div`\n  border-top-left-radius: ${cssUnits.borderRadius};\n  border-top-right-radius: ${cssUnits.borderRadius};\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  gap: 15px;\n\n  background-color: ${cssUnits.color.white};\n  padding: 40px;\n\n  p {\n    margin: 0;\n  }\n`;\n\nexport const UserPhoto = styled.img`\n  width: 150px;\n  border-radius: ${cssUnits.fullCircle};\n  object-fit: cover;\n  margin-bottom: 25px;\n`;\n\nexport const UserName = styled.p`\n  font-size: ${cssUnits.sizeText.lg};\n  font-weight: 700;\n`;\nexport const UserTag = styled.p`\n  font-size: ${cssUnits.sizeText.preLg};\n  color: ${cssUnits.color.darkGray};\n`;\nexport const UserLocation = styled.p`\n  font-size: ${cssUnits.sizeText.preLg};\n  color: ${cssUnits.color.darkGray};\n`;\nexport const SocialData = styled.div`\n  border-top: 1px solid ${cssUnits.color.gray};\n  height: 100px;\n  background-color: ${cssUnits.color.lightGray};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  border-bottom-left-radius: ${cssUnits.borderRadius};\n  border-bottom-right-radius: ${cssUnits.borderRadius};\n  div {\n    width: 100%;\n    height: 100%;\n    border-right: 1px solid ${cssUnits.color.gray};\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 6px;\n  }\n\n  div:last-child {\n    border-right: none;\n  }\n`;\nexport const SocialStatName = styled.span`\n  font-size: ${cssUnits.sizeText.md};\n  color: ${cssUnits.color.darkGray};\n`;\nexport const SocialStatValue = styled.span`\n  font-size: ${cssUnits.sizeText.preLg};\n  font-weight: 700;\n`;\n","import PropTypes from 'prop-types';\nimport {\n  ProfilCard,\n  UserInformation,\n  UserPhoto,\n  UserName,\n  UserTag,\n  UserLocation,\n  SocialData,\n  SocialStatName,\n  SocialStatValue,\n} from './Profil.styled';\n\nexport const Profil = ({\n  user: {\n    username =\"Stranger\",\n    tag,\n    location,\n    avatar,\n    stats: { followers = \"No data\", views = \"No data\", likes = \"No data\"},\n  },\n}) => {\n  return (\n    <ProfilCard>\n      <UserInformation>\n        <UserPhoto src={avatar} alt={username} />\n        <UserName>{username}</UserName>\n        <UserTag>{tag}</UserTag>\n        <UserLocation>{location}</UserLocation>\n      </UserInformation>\n      <SocialData>\n        <div>\n          <SocialStatName>Followers</SocialStatName>\n          <SocialStatValue>{new Intl.NumberFormat().format(followers)}</SocialStatValue>\n        </div>\n        <div>\n          <SocialStatName>Views</SocialStatName>\n          <SocialStatValue>{new Intl.NumberFormat().format(views)}</SocialStatValue>\n        </div>\n        <div>\n          <SocialStatName>Likes</SocialStatName>\n          <SocialStatValue>{new Intl.NumberFormat().format(likes)}</SocialStatValue>\n        </div>\n      </SocialData>\n    </ProfilCard>\n  );\n};\n\nProfil.propTypes = {\n  user: PropTypes.exact({\n    username: PropTypes.string.isRequired,\n    tag: PropTypes.string.isRequired,\n    location: PropTypes.string.isRequired,\n    avatar: PropTypes.string.isRequired,\n    stats: PropTypes.exact({\n      followers: PropTypes.number.isRequired,\n      views: PropTypes.number.isRequired,\n      likes: PropTypes.number.isRequired,\n    }),\n  }).isRequired,\n};\n","import styled from 'styled-components';\nimport { cssUnits } from '../CssBaseUnits/CssUnits';\n\nexport const StatisticBashboard = styled.section`\n  background-color: ${cssUnits.color.white};\n  width: 380px;\n`;\n\nexport const SectionTitle = styled.h2`\n  margin-top: 36px;\n  margin-bottom: 36px;\n  font-size: ${cssUnits.sizeText.lg};\n  text-transform: uppercase;\n  text-align: center;\n`;\n\nexport const StatInformation = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nexport const StatParameters = styled.li`\n  flex-basis: 19.7%;\n\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  color: ${cssUnits.color.white};\n\n  padding: 10px;\n  padding-bottom: 20px;\n\n  text-align: center;\n`;\n\nexport const StatLabel = styled.span`\n  font-size: ${cssUnits.sizeText.preLg};\n`;\n\nexport const StatPercentage = styled.span`\n  font-size: ${cssUnits.sizeText.lg};\n`;\n","import PropTypes from 'prop-types';\nimport { SectionTitle, StatInformation, StatisticBashboard, StatLabel, StatParameters, StatPercentage } from './Statistic.styled';\nimport { getRandomColor } from './RandomColorGenerator';\n\nexport const Statistic = ({ title, data }) => {\n  return (\n    <StatisticBashboard>\n      {(title = true && <SectionTitle>{title}</SectionTitle>)}\n      <StatInformation>\n        {data.map(item => (\n            <StatParameters key={item.id} style={{ backgroundColor: `${getRandomColor()}` }}>\n                <StatLabel>{item.label}</StatLabel>\n                <StatPercentage>{`${item.percentage}%`}</StatPercentage>\n          </StatParameters>\n        ))}\n      </StatInformation>\n    </StatisticBashboard>\n  );\n};\n\nStatistic.propTypes = {\n  title: PropTypes.string,\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        label: PropTypes.string.isRequired,\n        percentage: PropTypes.number.isRequired,\n    })\n  ).isRequired,\n};\n","export function getRandomColor() {\n  return `rgb(${Math.floor(Math.random() * 125)}, ${Math.floor(Math.random() * 125)}, ${Math.floor(Math.random() * 125)})`;\n}","import styled from 'styled-components';\n\nexport const List = styled.ul`\n    list-style: none;\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    padding: 0;\n`;","import styled from \"styled-components\";\nimport { cssUnits } from \"components/CssBaseUnits/CssUnits\";\n\nexport const CardWrapper = styled.li`\nwidth: 200px;\nbackground-color: ${cssUnits.color.white};\n\ndisplay: flex;\njustify-content: left;\nalign-items: center;\ngap: 10px;\n\npadding: 5px;\n`;\n\nexport const FriendStatus = styled.span`\n\n`;\n\nexport const FriendAvatar = styled.img`\nborder-radius: ${cssUnits.borderRadius};\n`;\n\nexport const FriendName = styled.p`\nmargin: 0;\nfont-size: ${cssUnits.sizeText.lg}`;","import PropTypes from \"prop-types\";\nimport { CardWrapper, FriendAvatar, FriendName, FriendStatus,  } from \"./FriendListItem.styled\"; \n\nexport const FriendListItem = ({ friend: {avatar, name, isOnline } }) => {\n    return (\n        <CardWrapper>\n            <FriendStatus>&#8226;</FriendStatus>\n            <FriendAvatar src={avatar} alt=\"User avatar\" width=\"48\" />\n            <FriendName>{name}</FriendName>\n        </CardWrapper>\n    )\n}\n\nFriendListItem.propTypes = {\n    friend: PropTypes.exact({\n        avatar: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        isOnline: PropTypes.oneOf(['true', 'false'])\n    }).isRequired,\n}\n\n","import PropTypes from 'prop-types';\nimport { List } from './FriendList.styled';\nimport { FriendListItem } from 'components/FriendListItem/FriendListItem';\n\nexport const FriendList = ({ friends }) => {\n  return (\n    <List>\n      {friends.map(friend => (\n        <li key={friend.id}><FriendListItem friend={friend} /></li>\n      ))}\n    </List>\n  );\n};\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    })\n  ).isRequired,\n};\n","import { Profil } from \"./Profil/Profil\";\nimport { Statistic } from \"./Statistic/Statistic\";\nimport { FriendList } from \"./FriendList/FriendList\";\n\nimport user from \"../data/user.json\";\nimport data from \"../data/data.json\";\nimport friends from \"../data/friends.json\";\n// import transactions from \"../data/transactions.json\";\n\nexport const App = () => {\n  return (\n    <div\n      style={{     \n        backgroundColor: \"#dddddd\",       \n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        fontSize: 40,\n        color: '#202020'\n      }}\n    >\n      <Profil user={user} />\n      <Statistic title=\"Upload stats\" data={data} />\n      <FriendList friends={friends} />\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { App } from 'components/App';\nimport './index.css';\n\nReactDOM.createRoot(document.getElementById('root')).render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}